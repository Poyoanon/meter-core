var a=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var e=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var p=(k,h,n)=>h in k?a(k,h,{enumerable:!0,configurable:!0,writable:!0,value:n}):k[h]=n;var y=(k,h)=>{for(var n in h)a(k,n,{get:h[n],enumerable:!0})},t=(k,h,n,d)=>{if(h&&typeof h=="object"||typeof h=="function")for(let m of e(h))!g.call(k,m)&&m!==n&&a(k,m,{get:()=>h[m],enumerable:!(d=f(h,m))||d.enumerable});return k};var __=k=>t(a({},"__esModule",{value:!0}),k);var L=(k,h,n)=>(p(k,typeof h!="symbol"?h+"":h,n),n),H=(k,h,n)=>{if(!h.has(k))throw TypeError("Cannot "+n)};var x=(k,h,n)=>(H(k,h,"read from private field"),n?n.call(k):h.get(k)),N=(k,h,n)=>{if(h.has(k))throw TypeError("Cannot add the same private member more than once");h instanceof WeakSet?h.add(k):h.set(k,n)},G=(k,h,n,d)=>(H(k,h,"write to private field"),d?d.call(k,n):h.set(k,n),n);var q=(k,h,n)=>(H(k,h,"access private method"),n);var s_={};y(s_,{MeterData:()=>b});module.exports=__(s_);var D=require("fs"),M=require("path");var J=(l=>(l[l.none=0]="none",l[l.slot=1]="slot",l[l.stat=2]="stat",l[l.ability_point=3]="ability_point",l[l.combat_effect=4]="combat_effect",l[l.skill_damage=5]="skill_damage",l[l.skill_critical_ratio=6]="skill_critical_ratio",l[l.skill_critical_damage=7]="skill_critical_damage",l[l.skill_penetration=8]="skill_penetration",l[l.npc_grade_less_damage=9]="npc_grade_less_damage",l[l.npc_grade_less_critical_ratio=10]="npc_grade_less_critical_ratio",l[l.npc_grade_less_critical_damage=11]="npc_grade_less_critical_damage",l[l.npc_grade_less_penetration=12]="npc_grade_less_penetration",l[l.npc_grade_greater_damage=13]="npc_grade_greater_damage",l[l.npc_grade_greater_critical_ratio=14]="npc_grade_greater_critical_ratio",l[l.npc_grade_greater_critical_damage=15]="npc_grade_greater_critical_damage",l[l.npc_grade_greater_penetration=16]="npc_grade_greater_penetration",l[l.npc_species_damage=17]="npc_species_damage",l[l.npc_species_critical_ratio=18]="npc_species_critical_ratio",l[l.npc_species_critical_damage=19]="npc_species_critical_damage",l[l.npc_species_penetration=20]="npc_species_penetration",l[l.npc_attr_damage=21]="npc_attr_damage",l[l.npc_attr_critical_ratio=22]="npc_attr_critical_ratio",l[l.npc_attr_critical_damage=23]="npc_attr_critical_damage",l[l.npc_attr_penetration=24]="npc_attr_penetration",l[l.mana_reduction=25]="mana_reduction",l[l.skill_mana_reduction=26]="skill_mana_reduction",l[l.skill_cooldown_reduction=27]="skill_cooldown_reduction",l[l.ability_feature=28]="ability_feature",l[l.class_option=29]="class_option",l[l.ability_point_passive=30]="ability_point_passive",l[l.instrument=31]="instrument",l[l.skill_feature=32]="skill_feature",l[l.npc_adaptation=33]="npc_adaptation",l[l.skill_group_damage=34]="skill_group_damage",l[l.skill_group_cooldown_reduction=35]="skill_group_cooldown_reduction",l[l.skill_level=36]="skill_level",l[l.skill_feature_level=37]="skill_feature_level",l[l.life_casting_speed=38]="life_casting_speed",l[l.life_casting_tier=39]="life_casting_tier",l[l.life_bonus_type_success=40]="life_bonus_type_success",l[l.life_bonus_type_extra=41]="life_bonus_type_extra",l[l.life_bonus_type_skill_bonus=42]="life_bonus_type_skill_bonus",l[l.life_bonus_type_minigame_perfect=43]="life_bonus_type_minigame_perfect",l[l.life_durability_bonus=44]="life_durability_bonus",l[l.life_mini_game_difficulty=45]="life_mini_game_difficulty",l[l.combat_effect_cooldown_reduction=46]="combat_effect_cooldown_reduction",l[l.skill_damage_addend=47]="skill_damage_addend",l[l.awakening_usable_count_addend=48]="awakening_usable_count_addend",l[l.battle_item_heal=49]="battle_item_heal",l[l.party_heal=50]="party_heal",l[l.party_shield=51]="party_shield",l[l.identity_gauge=52]="identity_gauge",l[l.attack_power_amplify_addend=53]="attack_power_amplify_addend",l[l.attack_power_amplify_multiplier=54]="attack_power_amplify_multiplier",l[l.not_in_party_damage=55]="not_in_party_damage",l[l.skill_effect_group_set_damage=56]="skill_effect_group_set_damage",l))(J||{});var z=(c=>(c[c.none=0]="none",c[c.modify_damage=1]="modify_damage",c[c.modify_final_damage=2]="modify_final_damage",c[c.modify_critical_ratio=3]="modify_critical_ratio",c[c.modify_critical_multiplier=4]="modify_critical_multiplier",c[c.modify_penetration=5]="modify_penetration",c[c.modify_penetration_when_critical=6]="modify_penetration_when_critical",c[c.exec_active_effect_when_damage=7]="exec_active_effect_when_damage",c[c.exec_active_effect_when_critical=8]="exec_active_effect_when_critical",c[c.exec_reactive_effect_when_miss=9]="exec_reactive_effect_when_miss",c[c.exec_reactive_effect_when_damage=10]="exec_reactive_effect_when_damage",c[c.exec_reactive_effect_when_critical=11]="exec_reactive_effect_when_critical",c[c.exec_after_effect=12]="exec_after_effect",c[c.exec_after_skill=13]="exec_after_skill",c[c.apply_heal=14]="apply_heal",c[c.modify_reactive_damage=15]="modify_reactive_damage",c[c.modify_damage_shield_multiplier=16]="modify_damage_shield_multiplier",c[c.exec_active_effect_when_kill=17]="exec_active_effect_when_kill",c[c.exec_start_skill=18]="exec_start_skill",c[c.modify_penetration_addend=19]="modify_penetration_addend",c[c.modify_penetration_addend_when_critical=20]="modify_penetration_addend_when_critical",c[c.modify_reactive_critical_multiplier=21]="modify_reactive_critical_multiplier",c[c.modify_damage_when_critical=22]="modify_damage_when_critical",c[c.modify_paralyzation_point=23]="modify_paralyzation_point",c[c.exec_when_counter=24]="exec_when_counter",c[c.exec_when_be_killed=25]="exec_when_be_killed",c))(z||{}),W=(m=>(m[m.none=0]="none",m[m.self=1]="self",m[m.target=2]="target",m[m.caster=3]="caster",m))(W||{}),Q=(r=>(r[r.none=0]="none",r[r.current_skill=1]="current_skill",r[r.hp_less=2]="hp_less",r[r.hp_greater=3]="hp_greater",r[r.mp_less=4]="mp_less",r[r.mp_greater=5]="mp_greater",r[r.npc_grade_less=6]="npc_grade_less",r[r.npc_grade_greater=7]="npc_grade_greater",r[r.npc_grade_equal=8]="npc_grade_equal",r[r.npc_species=9]="npc_species",r[r.npc_attr=10]="npc_attr",r[r.abnormal_move=11]="abnormal_move",r[r.abnormal_status=12]="abnormal_status",r[r.abnormal_move_immune=13]="abnormal_move_immune",r[r.abnormal_status_immune=14]="abnormal_status_immune",r[r.abnormal_move_all=15]="abnormal_move_all",r[r.pc=16]="pc",r[r.skill_effect_id=17]="skill_effect_id",r[r.identity_stack_count=18]="identity_stack_count",r[r.status_effect_immunetype=19]="status_effect_immunetype",r[r.abnormal_not_move=20]="abnormal_not_move",r[r.target_count=21]="target_count",r[r.skill_identity_category=22]="skill_identity_category",r[r.identity_element_value=23]="identity_element_value",r[r.directional_attack=24]="directional_attack",r[r.current_skill_group=25]="current_skill_group",r[r.abnormal_move_status_all=26]="abnormal_move_status_all",r[r.identity_stance=27]="identity_stance",r[r.pc_skill=28]="pc_skill",r[r.skill_effect_group_set=29]="skill_effect_group_set",r[r.npc_id=30]="npc_id",r[r.identity_gauge0_value_less=31]="identity_gauge0_value_less",r[r.pc_without_me=32]="pc_without_me",r[r.npc_scaled_level_equal=33]="npc_scaled_level_equal",r[r.npc_scaled_level_less=34]="npc_scaled_level_less",r[r.npc_scaled_level_greater=35]="npc_scaled_level_greater",r[r.not_skill_effect_id=36]="not_skill_effect_id",r[r.abnormal_move_not_immune=37]="abnormal_move_not_immune",r[r.apply_target_marking=38]="apply_target_marking",r[r.damage_attr=39]="damage_attr",r[r.identity_element_value_less=40]="identity_element_value_less",r[r.command_skill_type=41]="command_skill_type",r))(Q||{});var Y=(s=>(s[s.none=0]="none",s[s.berserker_normal=1]="berserker_normal",s[s.berserker_rush=2]="berserker_rush",s[s.warlord_normal=3]="warlord_normal",s[s.warlord_shield_of_battlefield=4]="warlord_shield_of_battlefield",s[s.destroyer_normal=5]="destroyer_normal",s[s.destroyer_focus=6]="destroyer_focus",s[s.destroyer_release=7]="destroyer_release",s[s.battle_master_normal=8]="battle_master_normal",s[s.battle_master_bubble=9]="battle_master_bubble",s[s.infighter_normal=10]="infighter_normal",s[s.infighter_vigor=11]="infighter_vigor",s[s.infighter_shock=12]="infighter_shock",s[s.forcemaster_normal=13]="forcemaster_normal",s[s.forcemaster_soul=14]="forcemaster_soul",s[s.lance_master_normal=15]="lance_master_normal",s[s.lance_master_wild=16]="lance_master_wild",s[s.lance_master_focus=17]="lance_master_focus",s[s.devil_hunter_normal=18]="devil_hunter_normal",s[s.devil_hunter_pistol=19]="devil_hunter_pistol",s[s.devil_hunter_shotgun=20]="devil_hunter_shotgun",s[s.devil_hunter_rifle=21]="devil_hunter_rifle",s[s.blaster_normal=22]="blaster_normal",s[s.blaster_cannon=23]="blaster_cannon",s[s.hawkeye_normal=24]="hawkeye_normal",s[s.hawkeye_summon=25]="hawkeye_summon",s[s.summoner_normal=26]="summoner_normal",s[s.summoner_ancient=27]="summoner_ancient",s[s.arcana_normal=28]="arcana_normal",s[s.arcana_stack=29]="arcana_stack",s[s.arcana_ruin=30]="arcana_ruin",s[s.arcana_card=31]="arcana_card",s[s.bard_normal=32]="bard_normal",s[s.bard_serenade=33]="bard_serenade",s[s.blade_burst=34]="blade_burst",s[s.holyknight_normal=35]="holyknight_normal",s[s.holyknight_holy=36]="holyknight_holy",s[s.holyknight_retribution=37]="holyknight_retribution",s[s.demonic_normal=38]="demonic_normal",s[s.demonic_capture=39]="demonic_capture",s[s.demonic_demon=40]="demonic_demon",s[s.warlord_lance=41]="warlord_lance",s[s.reaper_normal=42]="reaper_normal",s[s.reaper_dagger=43]="reaper_dagger",s[s.reaper_shadow=44]="reaper_shadow",s[s.reaper_swoop=45]="reaper_swoop",s[s.scouter_scout=46]="scouter_scout",s[s.scouter_drone=47]="scouter_drone",s[s.scouter_hyper_sync=48]="scouter_hyper_sync",s[s.scouter_fusion=49]="scouter_fusion",s[s.blade_normal=50]="blade_normal",s[s.elemental_master_normal=51]="elemental_master_normal",s[s.elemental_master_fire=52]="elemental_master_fire",s[s.elemental_master_electricity=53]="elemental_master_electricity",s[s.elemental_master_ice=54]="elemental_master_ice",s[s.yinyangshi_normal=55]="yinyangshi_normal",s[s.yinyangshi_yin=56]="yinyangshi_yin",s[s.yinyangshi_yang=57]="yinyangshi_yang",s[s.weather_artist_weapon=58]="weather_artist_weapon",s[s.weather_artist_weather=59]="weather_artist_weather",s[s.summoner_summon=60]="summoner_summon",s[s.soul_eater_hollow=61]="soul_eater_hollow",s[s.soul_eater_killer=62]="soul_eater_killer",s[s.soul_eater_death=63]="soul_eater_death",s))(Y||{});var B=(w=>(w[w.none=0]="none",w[w.underling=1]="underling",w[w.normal=2]="normal",w[w.elite=3]="elite",w[w.named=4]="named",w[w.seed=5]="seed",w[w.boss=6]="boss",w[w.raid=7]="raid",w[w.lucky=8]="lucky",w[w.epic_raid=9]="epic_raid",w[w.commander=10]="commander",w))(B||{});var Z=(_=>(_[_.none=0]="none",_[_.hp=1]="hp",_[_.mp=2]="mp",_[_.str=3]="str",_[_.agi=4]="agi",_[_.int=5]="int",_[_.con=6]="con",_[_.str_x=7]="str_x",_[_.agi_x=8]="agi_x",_[_.int_x=9]="int_x",_[_.con_x=10]="con_x",_[_.criticalhit=15]="criticalhit",_[_.specialty=16]="specialty",_[_.oppression=17]="oppression",_[_.rapidity=18]="rapidity",_[_.endurance=19]="endurance",_[_.mastery=20]="mastery",_[_.criticalhit_x=21]="criticalhit_x",_[_.specialty_x=22]="specialty_x",_[_.oppression_x=23]="oppression_x",_[_.rapidity_x=24]="rapidity_x",_[_.endurance_x=25]="endurance_x",_[_.mastery_x=26]="mastery_x",_[_.max_hp=27]="max_hp",_[_.max_mp=28]="max_mp",_[_.max_hp_x=29]="max_hp_x",_[_.max_mp_x=30]="max_mp_x",_[_.max_hp_x_x=31]="max_hp_x_x",_[_.max_mp_x_x=32]="max_mp_x_x",_[_.normal_hp_recovery=33]="normal_hp_recovery",_[_.combat_hp_recovery=34]="combat_hp_recovery",_[_.normal_hp_recovery_rate=35]="normal_hp_recovery_rate",_[_.combat_hp_recovery_rate=36]="combat_hp_recovery_rate",_[_.normal_mp_recovery=37]="normal_mp_recovery",_[_.combat_mp_recovery=38]="combat_mp_recovery",_[_.normal_mp_recovery_rate=39]="normal_mp_recovery_rate",_[_.combat_mp_recovery_rate=40]="combat_mp_recovery_rate",_[_.self_recovery_rate=41]="self_recovery_rate",_[_.drain_hp_dam_rate=42]="drain_hp_dam_rate",_[_.drain_mp_dam_rate=43]="drain_mp_dam_rate",_[_.dam_reflection_rate=44]="dam_reflection_rate",_[_.char_attack_dam=47]="char_attack_dam",_[_.skill_effect_dam_addend=48]="skill_effect_dam_addend",_[_.attack_power_rate=49]="attack_power_rate",_[_.skill_damage_rate=50]="skill_damage_rate",_[_.attack_power_rate_x=51]="attack_power_rate_x",_[_.skill_damage_rate_x=52]="skill_damage_rate_x",_[_.cooldown_reduction=53]="cooldown_reduction",_[_.paralyzation_point_rate=54]="paralyzation_point_rate",_[_.def=55]="def",_[_.res=56]="res",_[_.def_x=57]="def_x",_[_.res_x=58]="res_x",_[_.def_x_x=59]="def_x_x",_[_.res_x_x=60]="res_x_x",_[_.critical_physical_inc_rate=65]="critical_physical_inc_rate",_[_.critical_magical_inc_rate=66]="critical_magical_inc_rate",_[_.def_pen_rate=67]="def_pen_rate",_[_.res_pen_rate=68]="res_pen_rate",_[_.physical_inc_rate=69]="physical_inc_rate",_[_.magical_inc_rate=70]="magical_inc_rate",_[_.self_shield_rate=71]="self_shield_rate",_[_.hit_rate=72]="hit_rate",_[_.dodge_rate=73]="dodge_rate",_[_.critical_hit_rate=74]="critical_hit_rate",_[_.critical_res_rate=75]="critical_res_rate",_[_.critical_dam_rate=76]="critical_dam_rate",_[_.attack_speed=77]="attack_speed",_[_.attack_speed_rate=78]="attack_speed_rate",_[_.move_speed=79]="move_speed",_[_.move_speed_rate=80]="move_speed_rate",_[_.prop_move_speed=81]="prop_move_speed",_[_.prop_move_speed_rate=82]="prop_move_speed_rate",_[_.vehicle_move_speed=83]="vehicle_move_speed",_[_.vehicle_move_speed_rate=84]="vehicle_move_speed_rate",_[_.ship_move_speed=85]="ship_move_speed",_[_.ship_move_speed_rate=86]="ship_move_speed_rate",_[_.fire_dam_rate=87]="fire_dam_rate",_[_.ice_dam_rate=88]="ice_dam_rate",_[_.electricity_dam_rate=89]="electricity_dam_rate",_[_.earth_dam_rate=91]="earth_dam_rate",_[_.dark_dam_rate=92]="dark_dam_rate",_[_.holy_dam_rate=93]="holy_dam_rate",_[_.elements_dam_rate=94]="elements_dam_rate",_[_.fire_res_rate=95]="fire_res_rate",_[_.ice_res_rate=96]="ice_res_rate",_[_.electricity_res_rate=97]="electricity_res_rate",_[_.earth_res_rate=99]="earth_res_rate",_[_.dark_res_rate=100]="dark_res_rate",_[_.holy_res_rate=101]="holy_res_rate",_[_.elements_res_rate=102]="elements_res_rate",_[_.self_cc_time_rate=105]="self_cc_time_rate",_[_.enemy_cc_time_rate=106]="enemy_cc_time_rate",_[_.identity_value1=107]="identity_value1",_[_.identity_value2=108]="identity_value2",_[_.identity_value3=109]="identity_value3",_[_.awakening_dam_rate=110]="awakening_dam_rate",_[_.item_drop_rate=111]="item_drop_rate",_[_.gold_rate=112]="gold_rate",_[_.exp_rate=113]="exp_rate",_[_.attack_power_addend=123]="attack_power_addend",_[_.attack_power_addend_2=124]="attack_power_addend_2",_[_.npc_species_humanoid_dam_rate=125]="npc_species_humanoid_dam_rate",_[_.npc_species_devil_dam_rate=126]="npc_species_devil_dam_rate",_[_.npc_species_substance_dam_rate=127]="npc_species_substance_dam_rate",_[_.npc_species_undead_dam_rate=128]="npc_species_undead_dam_rate",_[_.npc_species_plant_dam_rate=129]="npc_species_plant_dam_rate",_[_.npc_species_insect_dam_rate=130]="npc_species_insect_dam_rate",_[_.npc_species_spirit_dam_rate=131]="npc_species_spirit_dam_rate",_[_.npc_species_wild_beast_dam_rate=132]="npc_species_wild_beast_dam_rate",_[_.npc_species_mechanic_dam_rate=133]="npc_species_mechanic_dam_rate",_[_.npc_species_ancient_dam_rate=134]="npc_species_ancient_dam_rate",_[_.npc_species_god_dam_rate=135]="npc_species_god_dam_rate",_[_.npc_species_archfiend_dam_rate=136]="npc_species_archfiend_dam_rate",_[_.vitality=137]="vitality",_[_.ship_booter_speed=138]="ship_booter_speed",_[_.ship_wreck_speed_rate=139]="ship_wreck_speed_rate",_[_.island_speed_rate=140]="island_speed_rate",_[_.attack_power_sub_rate_1=141]="attack_power_sub_rate_1",_[_.attack_power_sub_rate_2=142]="attack_power_sub_rate_2",_[_.physical_inc_sub_rate_1=143]="physical_inc_sub_rate_1",_[_.physical_inc_sub_rate_2=144]="physical_inc_sub_rate_2",_[_.magical_inc_sub_rate_1=145]="magical_inc_sub_rate_1",_[_.magical_inc_sub_rate_2=146]="magical_inc_sub_rate_2",_[_.skill_damage_sub_rate_1=147]="skill_damage_sub_rate_1",_[_.skill_damage_sub_rate_2=148]="skill_damage_sub_rate_2",_[_.resource_recovery_rate=149]="resource_recovery_rate",_[_.weapon_dam=151]="weapon_dam",_[_.weapon_dam_x=152]="weapon_dam_x",_))(Z||{});var i=require("tiny-typed-emitter");var T,A,P,F,X,j,U,$=class extends i.TypedEmitter{constructor(n,d,m=!0,o=!!process.env.DEV){super();N(this,F);N(this,j);L(this,"PartyStatusEffectRegistry");L(this,"LocalStatusEffectRegistry");N(this,T,void 0);N(this,A,void 0);N(this,P,void 0);L(this,"debug");L(this,"trace",!1);this.PartyStatusEffectRegistry=new Map,this.LocalStatusEffectRegistry=new Map,this.debug=o,G(this,T,n),G(this,A,d),G(this,P,m)}getStatusEffectRegistryForPlayer(n,d){let m=this.getPlayerRegistry(d),o=m.get(n);if(o)return o;let S=new Map;return m.set(n,S),S}hasStatusEffectRegistryForPlayer(n,d){return this.getPlayerRegistry(d).has(n)}getPlayerRegistry(n){switch(n){case 1:return this.LocalStatusEffectRegistry;case 0:return this.PartyStatusEffectRegistry;default:break}return this.LocalStatusEffectRegistry}RemoveLocalObject(n,d){let m=this.LocalStatusEffectRegistry.get(n);if(m)for(let[,o]of m)this.RemoveStatusEffect(n,o.instanceId,1,void 0,d);this.LocalStatusEffectRegistry.delete(n)}RemovePartyObject(n,d){let m=this.PartyStatusEffectRegistry.get(n);if(m)for(let[,o]of m)this.RemoveStatusEffect(n,o.instanceId,0,void 0,d);this.PartyStatusEffectRegistry.delete(n)}RegisterStatusEffect(n){let d=this.getStatusEffectRegistryForPlayer(n.targetId,n.type),m=d.get(n.instanceId);m?x(this,P)&&m.expirationTimer&&(clearTimeout(m.expirationTimer),m.expirationTimer=void 0):n.effectType===0&&this.emit("shieldApplied",n),d.set(n.instanceId,n),this.SetupStatusEffectTimeout(n)}HasAnyStatusEffect(n,d,m,o){if(!this.hasStatusEffectRegistryForPlayer(n,d))return!1;let S=this.getStatusEffectRegistryForPlayer(n,d);for(let[,u]of S)if(!(!x(this,P)&&!this.IsReplayStatusEffectValidElseRemove(u,o))){for(let v of m)if(v===u.statusEffectId)return!0}return!1}IsReplayStatusEffectValidElseRemove(n,d){return n.expireAt===void 0||n.expireAt.getTime()>d.getTime()?!0:(this.ExpireStatusEffectByTimeout(n),!1)}HasAnyStatusEffectFromParty(n,d,m,o,S){if(!this.hasStatusEffectRegistryForPlayer(n,d))return!1;let u=this.getStatusEffectRegistryForPlayer(n,d);for(let[,v]of u)if(!(!x(this,P)&&!this.IsReplayStatusEffectValidElseRemove(v,S))&&o.includes(v.statusEffectId)){let E=x(this,T).getPartyIdFromEntityId(v.sourceId);if(this.ValidForWholeRaid(v))return E!==void 0;if(E===m)return!0}return!1}RemoveStatusEffect(n,d,m,o,S){if(!this.hasStatusEffectRegistryForPlayer(n,m))return;let u=this.getStatusEffectRegistryForPlayer(n,m),v=u.get(d);return v&&(x(this,P)&&(clearTimeout(v.expirationTimer),v.expirationTimer=void 0),u.delete(d),o===4&&(x(this,P)||this.IsReplayStatusEffectValidElseRemove(v,S))&&this.RegisterValueUpdate(v,v.value,0)),v}GetStatusEffects(n,d,m,o){if(!this.hasStatusEffectRegistryForPlayer(n,d))return[];let S=this.getStatusEffectRegistryForPlayer(n,d);if(!x(this,P))for(let[,v]of S)this.IsReplayStatusEffectValidElseRemove(v,m);let u=[...S.values()];return o!==void 0?u.filter((v,E,I)=>v.sourceId===o):u}GetStatusEffectsFromParty(n,d,m,o){if(!this.hasStatusEffectRegistryForPlayer(n,d))return[];let S=this.getStatusEffectRegistryForPlayer(n,d);if(!x(this,P))for(let[,u]of S)this.IsReplayStatusEffectValidElseRemove(u,o);return[...S.values()].filter(u=>this.ValidForWholeRaid(u)?x(this,T).getPartyIdFromEntityId(u.sourceId)!==void 0:m===x(this,T).getPartyIdFromEntityId(u.sourceId))}Clear(n){let d=0;for(let[,o]of this.LocalStatusEffectRegistry){for(let[,S]of o)this.RemoveStatusEffect(S.targetId,S.instanceId,S.type,void 0,n);d+=o.size}let m=0;for(let[,o]of this.PartyStatusEffectRegistry){for(let[,S]of o)this.RemoveStatusEffect(S.targetId,S.instanceId,S.type,void 0,n);m+=o.size}this.trace&&console.log("On Clear SE in local",d,"in party",m),this.LocalStatusEffectRegistry.clear(),this.PartyStatusEffectRegistry.clear()}UpdateDuration(n,d,m,o){let u=this.getStatusEffectRegistryForPlayer(d,o).get(n);if(u){let v=m-u.timestamp;if(x(this,P)&&u.expirationTimer&&(this.trace&&console.log("Clearing timeout for",u.instanceId,"because of duration change"),clearTimeout(u.expirationTimer),u.expirationTimer=void 0),u.expireAt){let E=u.expireAt.getTime()+Number(v),I=E-u.pktTime.getTime();I>0?(this.trace&&console.log("Extending duration by",v,"ms","New timeout delay",I,"from",u.expireAt.toISOString(),"to",new Date(E).toISOString()),x(this,P)&&(u.expirationTimer=setTimeout(this.ExpireStatusEffectByTimeout.bind(this,u),I)),u.expireAt=new Date(E),u.timestamp=m):u.expireAt=void 0}}else this.debug&&console.error("Tried to update duration for SE with instanceId",n," on target",d,"but where is no such SE registered")}SyncStatusEffect(n,d,m,o,S){let u=q(this,j,U).call(this,d,S),v=u?0:1,E=u?d:m;if(!E)return;let w=this.getStatusEffectRegistryForPlayer(E,v).get(n);if(!w)return;let R=w.value;w.value=o,this.RegisterValueUpdate(w,R,o)}ValidForWholeRaid(n){return(n.buffCategory===3||n.buffCategory===1||n.buffCategory===2)&&n.category===1&&n.showType===1}SetupStatusEffectTimeout(n){if(n.expirationDelay>0&&n.expirationDelay<604800){let d=n.pktTime.getTime()>n.occurTime.getTime()?n.pktTime:n.occurTime,m=Math.ceil(n.expirationDelay*1e3),o=d.getTime()+m+$.TIMEOUT_DELAY_MS-n.pktTime.getTime();n.expireAt=new Date(n.pktTime.getTime()+o),this.trace&&console.log("Setting up statuseffect expiration time for",n.name,n.instanceId,"to",n.expireAt.toISOString(),"with delay",o),x(this,P)&&(n.expirationTimer=setTimeout(this.ExpireStatusEffectByTimeout.bind(this,n),o))}}ExpireStatusEffectByTimeout(n){this.debug&&console.error("Triggered timeout on",n.name,"with iid",n.instanceId),this.RemoveStatusEffect(n.targetId,n.instanceId,n.type,void 0,new Date)}RegisterValueUpdate(n,d,m){n.effectType===0&&this.emit("shieldChanged",n,d,m)}newPC(n,d,m){let o=q(this,j,U).call(this,n.pcStruct.characterId,d);o?this.RemovePartyObject(n.pcStruct.characterId,m):this.RemoveLocalObject(n.pcStruct.playerId,m);for(let S of n.pcStruct.statusEffectDatas)this.RegisterStatusEffect(this.buildStatusEffect(S,o?n.pcStruct.characterId:n.pcStruct.playerId,S.sourceId,o?0:1,m))}buildStatusEffect(n,d,m,o,S){let u=n.value?n.value.readUInt32LE():0,v=n.value?n.value.readUInt32LE(8):0,E=u<v?u:v,I=0,w=0,R=0,V="Unknown",O=1,C=x(this,A).skillBuff.get(n.statusEffectId);if(C){switch(V=C.name,C.category){case"debuff":I=1;break}switch(C.buffcategory){case"bracelet":w=1;break;case"etc":w=2;break;case"battleitem":w=3;break}switch(C.iconshowtype){case"all":R=1;break}switch(C.type){case"shield":O=0;break}}return{instanceId:n.effectInstanceId,sourceId:m,statusEffectId:n.statusEffectId,targetId:d,type:o,dbTarget:C?.target??"none",value:E,buffCategory:w,category:I,showType:R,expirationDelay:n.totalTime,expirationTimer:void 0,timestamp:n.endTick,expireAt:void 0,occurTime:n.occurTime,name:V,pktTime:S,effectType:O,stackCount:n.stackCount}}getStatusEffects(n,d,m,o){let S=[],u=[],v=q(this,F,X).call(this,n,m),E=this.GetStatusEffects(v?n.characterId:n.entityId,v?0:1,o,void 0);for(let I of E)u.push([I.statusEffectId,I.sourceId,I.stackCount]);if(d){let I=q(this,F,X).call(this,d,m),w=x(this,T).isEntityInParty(n.entityId),R=w?x(this,T).getPartyIdFromEntityId(n.entityId):void 0,V=w&&R?this.GetStatusEffectsFromParty(I?d.characterId:d.entityId,I?0:1,R,o):this.GetStatusEffects(I?d.characterId:d.entityId,I?0:1,o,n.entityId);for(let O of V)O.type===1&&O.category===1&&O.sourceId!==n.entityId&&O.dbTarget==="self"||S.push([O.statusEffectId,O.sourceId,O.stackCount])}return[u,S]}},K=$;T=new WeakMap,A=new WeakMap,P=new WeakMap,F=new WeakSet,X=function(n,d){if(n.entityType!==1)return!1;let m=n;return q(this,j,U).call(this,m.characterId,d)},j=new WeakSet,U=function(n,d){let m=x(this,T).isCharacterInParty(d),o=x(this,T).isCharacterInParty(n);if(m){if(!o||n===d)return!1;let S=x(this,T).getPartyIdFromCharacterId(d),u=x(this,T).getPartyIdFromCharacterId(n);return S===u}return!1},L(K,"TIMEOUT_DELAY_MS",1e3);var b=class{dbPath="";modulePath;enums;npc;PCData;skill;skillBuff;skillEffect;skillFeature;combatEffect;esther;itemSet;statQueryFilter;constructor(h="./meter-core/data"){this.modulePath=h,this.enums=new Map,this.npc=new Map,this.PCData=new Map,this.skill=new Map,this.skillBuff=new Map,this.skillEffect=new Map,this.skillFeature=new Map,this.combatEffect=new Map,this.esther=[],this.itemSet={items:new Map,seteffects:new Map},this.statQueryFilter={zone:new Set,raid:new Set}}processEnumData(h){for(let[n,d]of Object.entries(h)){let m=new Map;for(let[o,S]of Object.entries(d))m.set(o,S);this.enums.set(n,m)}}processNpcData(h){for(let n of Object.values(h))this.npc.set(n.id,n)}processPCData(h){for(let[n,d]of Object.entries(h))this.PCData.set(parseInt(n),d)}processSkillData(h){for(let n of Object.values(h))this.skill.set(n.id,n)}processSkillBuffData(h){for(let n of Object.values(h))this.skillBuff.set(n.id,n)}processSkillBuffEffectData(h){for(let n of Object.values(h))this.skillEffect.set(n.id,n)}processSkillFeature(h){for(let n of Object.values(h)){let d=new Map;for(let m of Object.values(n.tripods))d.set(m.key,m);this.skillFeature.set(n.skillid,d)}}processCombatEffectData(h){for(let n of Object.values(h))this.combatEffect.set(n.id,n)}processEsther(h){this.esther=Object.values(h)}processItemSet(h){for(let[n,d]of Object.entries(h)){let m=new Map;for(let[o,S]of Object.entries(d)){let u=new Map;for(let[v,E]of Object.entries(S.value))u.set(parseInt(v),E);m.set(parseInt(o),u);for(let v of Object.values(S.itemids))this.itemSet.items.set(v,{setname:n,level:parseInt(o)})}this.itemSet.seteffects.set(n,m)}}procesStatQueryFilter(h){this.statQueryFilter.zone=new Set(h.zone),this.statQueryFilter.raid=new Set(h.raid)}getNpcName(h){return this.npc.get(h)?.name||""}getClassName(h){return this.PCData.get(h)||""}getSkillName(h){return this.skill.get(h)?.name||""}getSkillClassId(h){return this.skill.get(h)?.classid||0}getSkillEffectComment(h){return this.skillEffect.get(h)?.comment||""}getSkillEffectDirectionalMask(h){return this.skillEffect.get(h)?.directionalmask||0}getSkillEsther(h){for(let n of this.esther)if(n.skills.includes(h))return n}getNpcEsther(h){for(let n of this.esther)if(n.npcs.includes(h))return n}getStatusEffectHeaderData(h){let n=this.skillBuff.get(h);if(!n||n.iconshowtype==="none")return;let d;n.buffcategory==="ability"&&[501,502,503,504,505].includes(n.uniquegroup)?d="dropsofether":d=n.buffcategory;let m={target:n.target==="none"?0:n.target==="self"?2:1,category:n.category,buffcategory:d,bufftype:this.getStatusEffectBuffTypeFlags(n),uniquegroup:n.uniquegroup,source:{name:n.name,desc:n.desc,icon:n.icon}};if(d==="classskill"||d==="identity"){let o;if(n.sourceskill)o=this.skill.get(n.sourceskill),o&&(m.source.skill=o);else{let S=Math.floor(h/100)*10;if(o=this.skill.get(S),!o){let u=Math.floor(n.uniquegroup/100)*10;o=this.skill.get(u)}o&&(m.source.skill=o)}o&&(m.source.skill=o)}else if(d==="ability"&&n.uniquegroup!==0){let o;if(n.sourceskill)o=this.skill.get(n.sourceskill),o&&(m.source.skill=o);else{let S=Math.floor(h/100)*10;if(o=this.skill.get(S),!o){let u=Math.floor(n.uniquegroup/100)*10;o=this.skill.get(u)}}o&&(m.source.skill=o)}else d==="set"&&n.setname&&(m.source.setname=n.setname);return m}getStatusEffectBuffTypeFlags(h){let n=0;return["weaken_defense","weaken_resistance","skill_damage_amplify","beattacked_damage_amplify","skill_damage_amplify_attack","directional_attack_amplify","instant_stat_amplify","attack_power_amplify","instant_stat_amplify_by_contents"].includes(h.type)?n|=1:["move_speed_down","all_speed_down"].includes(h.type)?n|=8:["reset_cooldown"].includes(h.type)?n|=128:["change_ai_point","ai_point_amplify"].includes(h.type)?n|=256:["increase_identity_gauge"].includes(h.type)&&(n|=64),h.passiveoption.forEach(d=>{let m=J[d.type];if(d.type==="stat"){let o=Z[d.keystat];[20,26,54].includes(o)&&(n|=256),[18,24,53].includes(o)&&(n|=128),[28,30,32,37,38,39,40,149].includes(o)&&(n|=64),[6,10,27,29,31,33,34,35,36,41,42,137].includes(o)&&(n|=16),(55<=o&&o<=70||[19,25].includes(o))&&(h.category==="buff"&&d.value>=0||h.category==="debuff"&&d.value<=0?n|=1:n|=32),79<=o&&o<=84&&(n|=8),[77,78,18,24].includes(o)&&(n|=4),[74,15,21].includes(o)&&(n|=2),(141<=o&&o<=148||87<=o&&o<=94||[3,4,5,7,8,9,47,49,50,51,52,72,73,76,110,123,151].includes(o))&&(h.category==="buff"&&d.value>=0||h.category==="debuff"&&d.value<=0?n|=1:n|=32)}else if(6===m)n|=2;else if([5,29,34,7,8].includes(m))h.category==="buff"&&d.value>=0||h.category==="debuff"&&d.value<=0?n|=1:n|=32;else if([27,35].includes(m))n|=128;else if([26,25].includes(m))n|=64;else if(4===m){let o=this.combatEffect.get(d.keyindex);if(!o)return;o.effects.forEach(S=>{S.actions.forEach(u=>{let v=z[u.type];[1,2,4,5,6,19,20,16].includes(v)?n|=1:3===v&&(n|=2)})})}}),n}getStatPairMap(h){let n=new Map;return h.forEach(d=>{n.set(d.statType,d.value)}),n}isCombatEffectConditionsValid({effect:h,self:n,target:d,caster:m,skill:o,hitOption:S,targetCount:u}){let v=!0;return h.conditions.forEach(E=>{if(!v)return;let I=W[E.actor];switch(Q[E.type]){case 21:(!u||u!==E.arg)&&(v=!1);break;case 1:(!o||o.id===E.arg)&&(v=!1);break;case 16:I===1?(!n||n.entityType!==1)&&(v=!1):I===2?(!d||d.entityType!==1)&&(v=!1):I===3?(!m||m.entityType!==1)&&(v=!1):v=!1;break;case 22:(!o||!o.identitycategory||Y[o.identitycategory]!=E.arg)&&(v=!1);break;case 13:(!d||![2,3].includes(d.entityType)||!d.pushimmune)&&(v=!1);break;case 15:v=!1;break;case 11:v=!1;break;case 12:v=!1;break;case 25:(!o||!o.groups||!o.groups.includes(E.arg))&&(v=!1);break;case 2:if(I===1)(!n||Number((n.stats.get(1)??0n)/(n.stats.get(27)??0n))>=E.arg/100)&&(v=!1);else if(I===2)(!d||Number((d.stats.get(1)??0n)/(d.stats.get(27)??0n))>=E.arg/100)&&(v=!1);else if(I===3)(!m||Number((m.stats.get(1)??0n)/(m.stats.get(27)??0n))>=E.arg/100)&&(v=!1);else{v=!1;break}break;case 34:I===2&&d&&[2,3].includes(d.entityType)?d.balanceLevel>E.arg&&(v=!1):v=!1;break;case 6:if(I===2)if(d&&[2,3].includes(d.entityType)){let w=B[d.grade];(!w||w>E.arg)&&(v=!1)}else v=!1;else v=!1;break;case 7:if(I===2)if(d&&[2,3].includes(d.entityType)){let w=B[d.grade];(!w||w<E.arg)&&(v=!1)}else v=!1;else v=!1;break;case 27:I===1?(!n||n.entityType!==1||n.stance!==E.arg)&&(v=!1):v=!1;break;case 24:(!S||!(S+1&E.arg))&&(v=!1);break;default:v=!1;break}}),v}isSupportClassId(h){return h===105||h===204||h===602}isBattleItem(h,n){let d=this.skillEffect.get(h)?.itemcategory;switch(n){case"attack":return d==="useup_battle_item_common_attack";case"buff":return d==="useup_battle_item_common_buff";case"function":return d==="useup_battle_item_common_function";default:return typeof d=="string"}}getBattleItemName(h){return this.skillEffect.get(h)?.itemname||""}loadDbs(h){this.dbPath=h,this.processEnumData(JSON.parse((0,D.readFileSync)((0,M.join)(h,"Enums.json"),"utf-8"))),this.processNpcData(JSON.parse((0,D.readFileSync)((0,M.join)(h,"Npc.json"),"utf-8"))),this.processPCData(JSON.parse((0,D.readFileSync)((0,M.join)(h,"PCData.json"),"utf-8"))),this.processSkillData(JSON.parse((0,D.readFileSync)((0,M.join)(h,"Skill.json"),"utf-8"))),this.processSkillBuffData(JSON.parse((0,D.readFileSync)((0,M.join)(h,"SkillBuff.json"),"utf-8"))),this.processSkillBuffEffectData(JSON.parse((0,D.readFileSync)((0,M.join)(h,"SkillEffect.json"),"utf-8"))),this.processSkillFeature(JSON.parse((0,D.readFileSync)((0,M.join)(h,"SkillFeature.json"),"utf-8"))),this.processCombatEffectData(JSON.parse((0,D.readFileSync)((0,M.join)(h,"CombatEffect.json"),"utf-8"))),this.processEsther(JSON.parse((0,D.readFileSync)((0,M.join)(h,"Esther.json"),"utf-8"))),this.processItemSet(JSON.parse((0,D.readFileSync)((0,M.join)(h,"ItemSet.json"),"utf-8"))),this.procesStatQueryFilter(JSON.parse((0,D.readFileSync)((0,M.join)(h,"StatQueryFilter.json"),"utf-8")))}};0&&(module.exports={MeterData});
