// Auto Generated, do not edit.
import { Read } from "../../stream";
import * as StatusEffectData from "../structures/StatusEffectData";
import * as PeriodUpdateStatData from "../structures/PeriodUpdateStatData";
import * as ReadNBytesInt64 from "../../common/ReadNBytesInt64";
export type PKTInitPC = {
  unk0: number;
  gearLevel: number;
  unk2: number;
  unk3: number;
  unk4: bigint;
  struct_341: string;
  characterId: bigint;
  unk7: number;
  unk8: number;
  unk9: number;
  unk10: number;
  level: number;
  unk12: number;
  unk13: number;
  playerId: bigint;
  unk15: number;
  unk16: number;
  unk17: number;
  unk18: number;
  unk20_0?: number;
  unk21: Buffer;
  unk22: number;
  unk23: number;
  unk24: number;
  name: string;
  unk26: bigint;
  unk27: number;
  struct_105: Buffer;
  unk29: Buffer;
  classId: number;
  unk31: number;
  unk32: number;
  unk33: number;
  struct_230: Buffer;
  unk35: bigint;
  unk36: number;
  statusEffectDatas: StatusEffectData.StatusEffectData[];
  unk38: bigint;
  unk39: number;
  unk40: number;
  unk41: number;
  periodUpdateStatDataList: PeriodUpdateStatData.PeriodUpdateStatData[];
  unk43: bigint;
  unk44: number;
  unk45: number;
  unk46: number;
  unk47: number;
  unk48: number;
  unk49: number;
  unk50: number;
  unk51: number;
  struct_345: Buffer;
  unk53: number;
  unk54: number;
  unk55: Buffer;
  statPair: { statType: number; value: bigint }[];
  unk57: number;
};
export function read(buf: Buffer) {
  const reader = new Read(buf);
  const data = {} as PKTInitPC;
  data.unk0 = reader.u32();
  data.gearLevel = reader.f32();
  data.unk2 = reader.u32();
  data.unk3 = reader.u8();
  data.unk4 = reader.u64();
  data.struct_341 = reader.string(7);
  data.characterId = reader.u64();
  data.unk7 = reader.u8();
  data.unk8 = reader.u8();
  data.unk9 = reader.u8();
  data.unk10 = reader.u8();
  data.level = reader.u16();
  data.unk12 = reader.u16();
  data.unk13 = reader.u8();
  data.playerId = reader.u64();
  data.unk15 = reader.u32();
  data.unk16 = reader.u32();
  data.unk17 = reader.u16();
  data.unk18 = reader.u8();
  if (reader.bool()) data.unk20_0 = reader.u32();
  data.unk21 = reader.bytes(120);
  data.unk22 = reader.u8();
  data.unk23 = reader.u32();
  data.unk24 = reader.u8();
  data.name = reader.string(20);
  data.unk26 = reader.u64();
  data.unk27 = reader.u8();
  data.struct_105 = reader.bytes(reader.u16(), 64);
  data.unk29 = reader.bytes(25);
  data.classId = reader.u16();
  data.unk31 = reader.u32();
  data.unk32 = reader.u32();
  data.unk33 = reader.u8();
  data.struct_230 = reader.bytes(reader.u16(), 3, 17);
  data.unk35 = reader.u64();
  data.unk36 = reader.u8();
  data.statusEffectDatas = reader.array(reader.u16(), () => StatusEffectData.read(reader), 80);
  data.unk38 = reader.u64();
  data.unk39 = reader.u8();
  data.unk40 = reader.u16();
  data.unk41 = reader.u8();
  data.periodUpdateStatDataList = reader.array(reader.u16(), () => PeriodUpdateStatData.read(reader), 5);
  data.unk43 = reader.u64();
  data.unk44 = reader.u8();
  data.unk45 = reader.u8();
  data.unk46 = reader.u8();
  data.unk47 = reader.u32();
  data.unk48 = reader.u8();
  data.unk49 = reader.u16();
  data.unk50 = reader.u8();
  data.unk51 = reader.u32();
  data.struct_345 = reader.bytes(reader.u16(), 104, 30);
  data.unk53 = reader.u32();
  data.unk54 = reader.u8();
  data.unk55 = reader.bytes(35);
  data.statPair = reader.array(
    reader.u16(),
    () => {
      const l = {} as { statType: number; value: bigint };
      l.statType = reader.u8();
      l.value = ReadNBytesInt64.read(reader);
      return l;
    },
    153
  );
  data.unk57 = reader.u32();
  return data;
}
export const name = "PKTInitPC";
export const opcode = 17550;
